-----------Basic-----------

Q 1: List vs Tuple 

List

Lists are Mutable datatype.
Lists consume more memory
The list is better for performing operations, such as insertion and deletion.
Implication of iterations is Time-consuming
Tuple

Tuples are Immutable datatype.
Tuple consume less memory as compared to the list
Tuple data type is appropriate for accessing the elements
Implication of iterations is comparatively Faster

Q2:  memory management is done in Python?

  - Python uses its private heap space to manage the memory
  - Python also has an inbuilt garbage collector, which recycles all the unused memory and frees the memory and makes it available to the heap space
  
Q3: What is the difference between Mutable datatype and Immutable datatype?

Mutable data types can be edited i.e., they can change at runtime. Eg – List, Dictionary, etc.
Immutable data types can not be edited i.e., they can not change at runtime. Eg – String, Tuple, etc.

Q4: Decorators in python 
-- https://www.geeksforgeeks.org/decorators-in-python/

Q5:What is the difference between Set and Dictionary?

Set is an unordered collection of data type that is iterable, mutable, and has no duplicate elements.
Dictionary in Python is an unordered collection of data values, used to store data values like a map.

Q6: 
List vs 	Tuple vs 	Set	 vs Dictionary
List is a non-homogeneous data structure that stores the elements in single row and multiple rows and columns	
Tuple is also a non-homogeneous data structure that stores single row and multiple rows and columns
Set data structure is also non-homogeneous data structure but stores in single row	
Dictionary is also a non-homogeneous data structure which stores key value pairs

List can be represented by [ ]	
Tuple can be represented by  ( )

Set can be represented by { }	
Dictionary  can be represented by { }

List allows duplicate elements	
Tuple allows duplicate elements
Set will not allow duplicate elements
Set will not allow duplicate elements and dictionary doesn’t allow duplicate keys.

List can use nested among all	
Tuple can use nested among all
Set can use nested among all
Dictionary can use nested among all

List
Example: [1, 2, 3, 4, 5]
Tuple
Example: (1, 2, 3, 4, 5)	
Set
Example: {1, 2, 3, 4, 5}
Dict
Example: {1, 2, 3, 4, 5}

List can be created using list() function	
Tuple can be created using tuple() function.	
Set can be created using set() function	
Dictionary can be created using dict() function
.
List is mutable i.e we can make any changes in list.
Tuple  is immutable i.e we can not make any changes in tuple	
Set is mutable i.e we can make any changes in set. But elements are not duplicated.
Dictionary is mutable. But Keys are not duplicated.

List is ordered	
Tuple is ordered	
Set is unordered	
Dictionary is ordered (Python 3.7 and above)

Creating an empty list
l=[]
Creating an empty Tuple t=()

Creating a set
a=set()
b=set(a)
Creating an empty dictionary
d={}

Q 7:How do you debug a Python program?

By using this command we can debug a python program:

$ python -m pdb python-script.py

Q8 :What is Pickling and Unpickling?

Python object hierarchy ------> byte stream
Pickle module accepts any Python object and converts it into a string representation and dumps it into a file by using the dump function, 
this process is called pickling. 

byte stream  ------> Python object hierarchy 
While the process of retrieving original Python objects from the stored string representation is called unpickling.

Q9: How are arguments passed by value or by reference in Python?
Everything in Python is an object and all variables hold references to the objects. The reference values are according to the functions; 
as a result, you cannot change the value of the references. However, you can change the objects if it is mutable.

Q10:  What is namespace in Python?

A namespace is a naming system used to make sure that names are unique to avoid naming conflicts

Q11: What is the difference between xrange and range function?
range() – This returns a list of numbers created using range() function.

xrange() – This function returns the generator object that can be used to display numbers only by looping. 
The only particular range is displayed on demand and hence called lazy evaluation.
-->lazy evaluation
--> python 2

# initializing a with range()
a = range(1,10000) print(type(a))
 
The return type of range() is : 
<type 'list'>

# initializing a with xrange()
x = xrange(1,10000)
print(type(x))
The return type of xrange() is : 
<type 'xrange'>


Q12: Iterators in Python

https://www.geeksforgeeks.org/iterators-in-python/

Q13: What is the difference between a shallow copy and deep copy

Shallow copy is used when a new instance type gets created and it keeps values that are copied whereas deep copy stores values that are already copied.

A shallow copy has faster program execution whereas deep coy makes it slow.
